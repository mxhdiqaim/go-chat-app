basePath: /
definitions:
  handler.CreateRoomRequest:
    properties:
      name:
        example: General
        type: string
    type: object
  handler.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: newuser
        type: string
    type: object
  handler.LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  handler.RegisterRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: newuser
        type: string
    type: object
  handler.RoomResponse:
    properties:
      created_at:
        example: "2025-09-03T12:00:00Z"
        type: string
      id:
        example: a1b2c3d4-e5f6-7890-1234-567890abcdef
        type: string
      name:
        example: General
        type: string
      owner_id:
        example: b1c2d3e4-f5g6-7890-1234-567890abcdef
        type: string
    type: object
  handler.UpdateUserRequest:
    properties:
      password:
        example: newpassword123
        type: string
      username:
        example: updateduser
        type: string
    type: object
  handler.UserResponse:
    properties:
      created_at:
        example: "2025-09-03T12:00:00Z"
        type: string
      id:
        example: a1b2c3d4-e5f6-7890-1234-567890abcdef
        type: string
      username:
        example: newuser
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a chat application backend API.
  title: Go Chat Application API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Log in with username and password to receive a JWT
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.LoginResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: Invalid credentials
          schema:
            type: string
        "500":
          description: Failed to generate token
          schema:
            type: string
      summary: Log in a user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user with a username and password
      parameters:
      - description: User Registration Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Registration failed
          schema:
            type: string
      summary: Register a new user
      tags:
      - auth
  /rooms:
    get:
      description: Retrieves a list of all available chat rooms.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.RoomResponse'
            type: array
        "500":
          description: Failed to get rooms
          schema:
            type: string
      summary: Get all rooms
      tags:
      - rooms
    post:
      consumes:
      - application/json
      description: Creates a new chat room. The authenticated user becomes the owner.
      parameters:
      - description: Room Name
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/handler.CreateRoomRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.RoomResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "500":
          description: Failed to create room
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a new room
      tags:
      - rooms
  /rooms/{id}:
    delete:
      description: Deletes a room. Only the room owner can perform this action.
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Invalid room ID
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "403":
          description: 'Forbidden: You are not the owner'
          schema:
            type: string
        "404":
          description: Room not found
          schema:
            type: string
        "500":
          description: Failed to delete room
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a room
      tags:
      - rooms
    get:
      description: Retrieves details for a specific chat room.
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.RoomResponse'
        "400":
          description: Invalid room ID
          schema:
            type: string
        "404":
          description: Room not found
          schema:
            type: string
      summary: Get a single room by ID
      tags:
      - rooms
    put:
      consumes:
      - application/json
      description: Updates the name of a room. Only the room owner can perform this
        action.
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: string
      - description: New Room Name
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/handler.CreateRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.RoomResponse'
        "400":
          description: Invalid room ID or request body
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "403":
          description: 'Forbidden: You are not the owner'
          schema:
            type: string
        "404":
          description: Room not found
          schema:
            type: string
        "500":
          description: Failed to update room
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a room
      tags:
      - rooms
  /rooms/{id}/join:
    post:
      description: Adds the authenticated user to a room's member list.
      parameters:
      - description: Room ID to join
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Invalid room ID
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "500":
          description: Failed to join room
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Join a room
      tags:
      - rooms
  /rooms/{id}/leave:
    post:
      description: Removes the authenticated user from a room's member list.
      parameters:
      - description: Room ID to leave
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Invalid room ID
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "500":
          description: Failed to leave room
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Leave a room
      tags:
      - rooms
  /users:
    get:
      description: Retrieves a list of all users in the system.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.UserResponse'
            type: array
        "500":
          description: Failed to get users
          schema:
            type: string
      summary: Get all users
      tags:
      - users
  /users/{id}:
    delete:
      description: Deletes a user's account. Users can only delete their own account.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Invalid user ID
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "403":
          description: 'Forbidden: You can only delete your own account'
          schema:
            type: string
        "500":
          description: Failed to delete user
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a user's account
      tags:
      - users
    get:
      description: Retrieves details for a specific user.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Invalid user ID
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      summary: Get a single user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates a user's username and/or password. Users can only update
        their own account.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UserResponse'
        "400":
          description: Invalid user ID or request body
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "403":
          description: 'Forbidden: You can only update your own account'
          schema:
            type: string
        "500":
          description: Failed to update user
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a user's account
      tags:
      - users
  /users/search:
    get:
      description: Searches for users by username.
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.UserResponse'
            type: array
        "400":
          description: Query parameter 'q' is required
          schema:
            type: string
        "500":
          description: Failed to search users
          schema:
            type: string
      summary: Search for users
      tags:
      - users
  /ws/{roomID}:
    get:
      description: Upgrades the HTTP connection to a WebSocket connection for a specific
        chat room. The user must be authenticated and a member of the room.
      parameters:
      - description: Room ID to connect to
        in: path
        name: roomID
        required: true
        type: string
      responses:
        "101":
          description: Switching Protocols
          schema:
            type: string
        "400":
          description: Invalid room ID
          schema:
            type: string
        "401":
          description: User not authenticated
          schema:
            type: string
        "403":
          description: User is not a member of this room
          schema:
            type: string
        "500":
          description: Internal server error or failed to upgrade connection
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Join and connect to a chat room
      tags:
      - chat
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
